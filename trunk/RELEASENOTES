======= 1.1.1 Release =======
  * Bugfixs
	- Fixed bug in Random::flatInt() when GSL is not used
	- Fixed bug in BaseNeuralNet::randomize

======= 1.1.0 Release =======
  * WARNING:
	The LinearFunction of previous version is now called RampFunction. From this version
	a new LinearFunction class was added and it differs from RampFunction.

  * Summary of important changes
	- added a method of BaseNeuralNet for getting hidden clusters
	- speedup BaseNeuralNet::getByName for big networks
	- added BaseNeuralNet::byName template method for an easy retreving of
		Clusters and Linkers added to BaseNeuralNet objects
	- added NNFW_VERSION macro
	- added min and max function to types.h
	- added SimpleTimer class
	- added support for Mac Os X Frameworks bundle
	- added Pattern and PatternSet classes for an easy setup of Learning/Test sets
	- changed LearningAlgorithm interface for dealing with Pattern and PatternSet
	- added method for calculating MSE and RMSD to LearningAlgorithm
	- more comments on BackPropagationAlgo::getError
	- added new output functions: LinearFunction (y=m*x+b), WinnerTakeAll,
		Periodic functions: PseudoGauss, Triangle, Sawtooth
	- rename old LinearFunction to RampFunction
	- updated Factory with new output functions
	- added max/minIndex and max/minValue to RealVec
	- added erase method to VectorData
	- added a parameter on saveXML for choosing the precision for real data
	- augmented precision when saving real data on XML file

======= 1.0.5 Release =======
  * Bugfixs
	- resolved inconsistence on saving mode property of CopyLinker on XML

======= 1.0.4 Release =======
  * Bugfixs
	- resolved the parsing of 'mode' attribute of CopyLinker
	- resolved "XML I/O CopyLinker Parse Error" reported on forum

======= 1.0.3 Release =======
  * Summary of important changes
	- added methods for setting the learning rate of Backpropagation Algorithm
	- added Momentum to Backpropagation Algorithm

======= 1.0.2 Release =======
  * Summary of important changes
	- added FindNNFW.cmake and NNFWConfig.cmake;
		now is possible configure CMake project using FIND_PACKAGE( NNFW )
	- improved nnfw-config script

======= 1.0.1 Release =======
  * Bugfixs
	- correct wrongly cloning of SparseMatrixLinker

======= 1.0.0 Release =======
  * Summary of important changes
	- added BackPropagationAlgo
	- various improvements
	- deleted all deprecated method and previous learning design
	- improved MAC support

======= 0.9.2 + 0.9.3 Release =======
  * Summary of important changes
	- added norm and normalize for RealMat
	- added LinearComboFunction

  * Bugfixs:
	- fixed a bug in GaussFunction constructor (Propertized version)
	- fixed visibility bug in doxygen comments
	- resolved linkage problem with nMessages under windows

======= 0.9.1 Release =======
  * Summary of important changes
	- added ScaleFunction that scale the inputs vector of Cluster
	- added normalize method to RealVec
	- added Random::flatRealVec to randomize a vector
	- added Random::flatRealMat to randomize a matrix

======= 0.9.0 Release =======
  * Summary of important changes
	- added an experimental class nnfwString for future Unicode support
	- new version of XML format; small changes for end-users but more improvements for
		people that create new kind of Cluster/Linker for a tighty integration with NNFW
	- added a generic data pointer (void*) to Variant and two template method for accessing it
	- add the method Propertized::convertStringTo for converting the string-type
		Variant readed from XML into the type required by class
	- nnfwMessage replace by a new object-oriented messaging system: nWarning, nError, nFatal
	- NNFW_DEBUG flags is also activated with CMake ReleaseWithDebugInfo build-type
	- renamed RealVec::mul to RealVec::outprod, and bugfixed
	- renamed Updatable::getName() to name()
	- renamed Cluster::size() to numNeurons()
	- Variant methods getRealVec and getRealMat now returns non-const pointers
	- MatrixLinker is now Abstract; use DotLinker

  * Bugfixs:
	- now nnfw-config report correctly the MKL include directory
	- added more exit-points in xml processing to avoid data corruption when
		mandatory tags are not present
	- no more segmentation fault when it's omitted the attribute 'i' in the xml 
		file for vector properties
	- no more segmentation fault when processed a non-existing property in xml files
	- bugfix error in exporting template classes in Windows; added NNFW_TEMPLATE macro for 
		handling the exportation of template classes
	- fixed clone method of GaussFunction
	- fixed outer-product calculation
	- adjusted Doxygen documentation; now all methods are displayed corretcly

======= 0.7.0 Release =======
 * Summary of important changes
    - added Outer-product, thanks to Francesco
    - added another Random::flatInt method
    - added nnfw-config script
    - implemented Random::gauss with GSL library
    - memoryCopy & memoryZeroing specialization for bool type
    - added methods: disconnectRandom(Real), connectRandom(Real) and disconnectAll()
    - changed name of disconnect(Real) to disconnectRandom(Real)
    - all attributes of MatrixLinker are privates now

======= Releases before 0.7.0 see SVN log =======
