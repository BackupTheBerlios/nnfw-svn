PROJECT( QTNNFW )
SET( CMAKE_COLOR_MAKEFILE ON )

### configure CMake to link against Qt4
FIND_PACKAGE( Qt4 REQUIRED )
SET( QT_USE_QTXML TRUE )
INCLUDE(${QT_USE_FILE})

FILE( GLOB QTNNFW_SRCS ./src/*.cpp )
FILE( GLOB QTNNFW_HDRS ./include/*.h )

INCLUDE_DIRECTORIES( ./include )

## extracting information from nnfw-config
EXEC_PROGRAM( nnfw-config ARGS --libs OUTPUT_VARIABLE NNFW_LIBS )
EXEC_PROGRAM( nnfw-config ARGS --cflags OUTPUT_VARIABLE NNFW_CFLAGS )

### RESOURCES
QT4_ADD_RESOURCES( QTNNFW_SRCS "icons/icons.qrc" )

### MOC WRAPPING
QT4_WRAP_CPP( QTNNFW_SRCS ${QTNNFW_HDRS} )

### EXE SETTING
ADD_EXECUTABLE( qtnnfw ${QTNNFW_SRCS} )
SET_TARGET_PROPERTIES( qtnnfw PROPERTIES COMPILE_FLAGS " ${NNFW_FLAGS}" )
SET_TARGET_PROPERTIES( qtnnfw PROPERTIES LINK_FLAGS "${NNFW_LIBS}" )

TARGET_LINK_LIBRARIES( qtnnfw "QtXml" )
TARGET_LINK_LIBRARIES( qtnnfw "QtGui" )
TARGET_LINK_LIBRARIES( qtnnfw "QtCore" )

    MESSAGE( "-- Setting compiler for Linux" )
    SET( CMAKE_CXX_COMPILER "g++" )
    SET( CMAKE_CXX_FLAGS "-pipe -fPIC -Wall -W " )
    SET( CMAKE_CXX_FLAGS_DEBUG "-g -O0 " )
    SET( CMAKE_CXX_FLAGS_RELEASE "-O3 " )
    SET( CMAKE_CXX_FLAGS_RELWITHDEBINFO "-g -O2" )
    SET( CMAKE_CXX_FLAGS_MINSIZEREL "-O2 -Os" )

