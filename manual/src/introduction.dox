/*! \page introduction Introduction
\addindex introduction

\anchor introduction_toc
<div id="tocContent_nohead">
<ul class="level_one">
    <li>\ref introduction_1 </li>
    <li>\ref introduction_2 </li>
    <li>\ref introduction_3 </li>
    <li>\ref introduction_4 </li>
    <li>\ref introduction_5 </li>
    <li>\ref introduction_6 </li>
    <li>\ref introduction_7 </li>
</ul>
</div>

\section introduction_1 Why another Neural Network library ?
Agli inizi del 2005, ho cercato una libreria di reti neurali semplice da usare, flessibile ed estensibile il pi&ugrave; possible. Dopo mesi di ricerca, ho capito che non c'era una simile libreria. Nonostante il grande numero di librerie presenti sul web, nessuna (o almeno io non l'ho trovata) &egrave; stata sviluppata con gli obiettivi che mi sono posto io:
<ol>
    <li> Semplicit&agrave; nella comprensione e utilizzo; </li>
    <li> Flessibilit&agrave; in ogni aspetto della rete neurale; </li>
    <li> Estendibile in modo semplice (fornendo anche documenti su 'come' sviluppare nuove parti); </li>
    <li> Efficiente dal punto di vista computazionale. </li>
</ol>
Infatti, la <em>Neural Network Framework</em> non vuole essere una libreria con tutto dentro pronta all'uso cos&igrave; come &egrave;, bens&igrave; si pone l'obiettivo di essere un <em>framework</em> per la realizzazione di proprie reti neurali in piena libert&agrave; fornendo i <em>building blocks</em> fondamentali per la costruzione di reti neurali di ogni genere.
\ref introduction_toc "[Up]"

\section introduction_2 What is NNFW ?
Il progetto Neural Network Framework (NNFW) si pone l'obiettivo di realizzare un insieme di classi C++ che consentono la creazione e l'utilizzo di un'enorme variet&agrave; di reti neurali. Il framework consente di potere usare la capacit&agrave; espressiva dell'infrastruttura a diversi livelli per consentire un uso agevole ed efficacie da parte di ogni utente, dal novizio all'esperto:
<ol>
    <li> a basso livello &egrave; possibile agire in completa libert&agrave; per la costruzione di complesse architetture altrimenti non realizzabili; &egrave; a questo livello che si puo contribuire aggiungendo nuove funzionalit&agrave; alla libreria;</li>
    <li> ad un livello intermedio sono presenti classi per la realizzazione di architetture largamente usate quali multilayer feedforward, Elmann networks, SOM e altre ancora;</li>
    <li> la possibilit&agrave; di descrivere la rete con file XML aggiunge un altro livello di accessibilit&agrave; alle varie funzionalit&agrave; del framework;</li>
    <li> un interfaccia grafica permette a chiunque con poche nozioni sulla libreria di creare e giocare con reti neurali anche complesse</li>
</ol>
\ref introduction_toc "[Up]"

\section introduction_3 What is NNFW not ?
Non &egrave; stata creata a fini educativi... quindi non vi aspettate di imparare le reti neurali da questo tool. L'utente deve sapere cosa &egrave; una rete neurale e le differenze fra le varie tipologie.
\ref introduction_toc "[Up]"

\section introduction_4 Download & Installation
\ref introduction_toc "[Up]"

\section introduction_5 Compiling and Running the tutorials
\ref introduction_toc "[Up]"

\section introduction_6 How is organized this manual
\ref introduction_toc "[Up]"

\section introduction_7 Notes about compilers and IDE
\ref introduction_toc "[Up]"


*/



/*
Per rendere il framework semplice, flessibile e allo stesso tempo efficiente ho scelto il C++ come linguaggio di sviluppo della libreria. Il linguaggio orientato agli oggetti mi ha permesso di strutturare il codice in modo chiaro e semplice da comprendere, e sopratutto mi ha permesso di rendere il framework facilmente estensibile e flessibile.<br>
La possibilit&agrave; di interfacciarsi con il C, i template e particolarit&agrave; tipiche del C++ (come friend), mi hanno permesso di mantenere efficiente il codice.
*/

